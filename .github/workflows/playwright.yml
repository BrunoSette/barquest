name: Playwright Tests

on:
  push:
    branches: ["*"]
  pull_request:
    branches: ["*"]

jobs:
  PlayWriteTests:
    timeout-minutes: 30
    runs-on: ubuntu-latest
    environment: preview

    env:
      POSTGRES_URL: ${{ secrets.POSTGRES_URL }}
      POSTGRES_USER: ${{ secrets.DB_USER }}
      POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD }}
      POSTGRES_HOST: ${{ secrets.DB_HOST }}
      POSTGRES_PORT: 6543
      POSTGRES_NAME: "postgres"
      STRIPE_SECRET_KEY: ${{ secrets.STRIPE_SECRET_KEY }}
      STRIPE_WEBHOOK_SECRET: ${{ secrets.STRIPE_WEBHOOK_SECRET }}
      SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
      RESEND_API_KEY: ${{ secrets.RESEND_API_KEY }}
      VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}

      - name: Install dependencies
        run: pnpm install

      - name: Build Project Artifacts
        run: vercel build --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }} > deployment-url.txt

      - name: Get Preview URL
        run: echo "PREVIEW_URL=$(cat deployment-url.txt)" >> $GITHUB_ENV
      - name: Build Project Artifacts
        run: vercel build --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }} > deployment-url.txt

      - name: Get Preview URL
        run: echo "PREVIEW_URL=$(cat deployment-url.txt)" >> $GITHUB_ENV

      - name: Install Playwright Browsers
        run: npx playwright install chromium

      # - name: Wait for Vercel deployment
      #   run: |
      #     echo "Waiting 30 seconds for deployment to be ready..."
      #     sleep 30
      #     echo "Deployment is ready!"

      - name: Run Playwright tests with tracing
        run: |
          mkdir -p test-results
          xvfb-run --auto-servernum --server-args="-screen 0 1280x960x24" \
            npx playwright test --trace on --output=test-results --timeout 90000 --retries 2
        env:
          PLAYWRIGHT_TEST_BASE_URL: ${{ env.PREVIEW_URL }}

      - name: Upload Playwright report and trace
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-results
          path: test-results/
          retention-days: 7
