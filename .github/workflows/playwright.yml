name: Playwright Tests

on:
  push:
    branches: ["*"]
  pull_request:
    branches: ["*"]

jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    environment: preview

    env:
      POSTGRES_URL: ${{ secrets.POSTGRES_URL }}
      POSTGRES_USER: ${{ secrets.DB_USER }}
      POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD }}
      POSTGRES_HOST: ${{ secrets.DB_HOST }}
      POSTGRES_PORT: 6543
      POSTGRES_NAME: "postgres"
      STRIPE_SECRET_KEY: ${{ secrets.STRIPE_SECRET_KEY }}
      STRIPE_WEBHOOK_SECRET: ${{ secrets.STRIPE_WEBHOOK_SECRET }}
      SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
      RESEND_API_KEY: ${{ secrets.RESEND_API_KEY }}

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install dependencies
        run: pnpm install

      - name: Build the application
        run: pnpm build

      - name: Start the application
        run: pnpm start &
        env:
          PORT: 3000

      - name: Wait for the app to start
        run: npx wait-on http://localhost:3000

      - name: Install Playwright Browsers
        run: npx playwright install chromium

      - name: Run Playwright tests
        run: |
          mkdir -p test-results
          PLAYWRIGHT_TEST_BASE_URL=http://localhost:3000 npx playwright test --trace on --output=test-results

      - name: Upload Playwright report and trace
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-results
          path: test-results/
          retention-days: 7

      # Sentry steps (if needed)
      # - name: Create Sentry release
      #   uses: getsentry/action-release@v1
      #   env:
      #     SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
      #   with:
      #     environment: preview
